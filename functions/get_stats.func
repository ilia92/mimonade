#!/bin/bash

get_stats() {

local worker_jq_response=

for rig in "${allRigsNames[@]}"; do

printf "INFO: Getting stats for: $rig\n"

# Translate to farm_jq_id to value
temp_var=farm_jq_response_${rigs[${rig}_farm_id]}
farm_jq_response=${!temp_var}

if ! [[ "$farm_jq_response" ]] && [[ ${rigs[${rig}_target_hash]} -ne 0 ]]; then

#printf "\n CURL for farm_id:  ${rigs[${rig}_farm_id]}\n "
declare farm_jq_response_${rigs[${rig}_farm_id]}="`curl --silent \
         -H "Content-Type: application/json" \
         -H "Authorization: Bearer $hive_api_key" \
         "$hiveAPIUrl/farms/${rigs[${rig}_farm_id]}/workers"`"
fi


# Translate to farm_jq_id to value
if [[ ${rigs[${rig}_target_hash]} -ne 0 ]] ; then

temp_var=farm_jq_response_${rigs[${rig}_farm_id]}
farm_jq_response=${!temp_var}

#printf "whole JQ:\n $farm_jq_response \n\n\n"
worker_jq_response=`printf '%s' "$farm_jq_response" | jq -r ".data[] | select(.name==\"$rig\")"`

#printf  "JQ: $worker_jq_response\n"

rigs[${rig}_real_hash]=`printf '%s' "$worker_jq_response" | jq ".miners_summary.hashrates[0].hash"`

if [[ "${rigs[${rig}_currency]}" == *flux* ]]; then
    rigs[${rig}_real_hash]=$(echo "${rigs[${rig}_real_hash]}"*1000/1 | bc )  # Multiply *1000 to receive in Human-readable
else
    rigs[${rig}_real_hash]=$(echo "${rigs[${rig}_real_hash]}"/1000 | bc )  # Divide /1000 to receive in Megahashes
fi

rigs[${rig}_hash_diff]=$((${rigs[${rig}_real_hash]}-${rigs[${rig}_target_hash]}))
#rigs[${rig}_hash_diff]=$(echo "${rigs[${rig}_real_hash]} - ${rigs[${rig}_target_hash]}" | bc)
rigs[${rig}_hash_diff_perc]=$((${rigs[${rig}_hash_diff]}*100 / ${rigs[${rig}_target_hash]}))

else
rigs[${rig}_hash_diff_perc]=0
fi


if [[ ${rigs[${rig}_hash_diff_perc]} -eq -100 ]] ; then
    rigs[${rig}_is_issue]=2
elif [[ ${rigs[${rig}_hash_diff_perc]} -le -5 ]] ; then
    rigs[${rig}_is_issue]=1
else
    rigs[${rig}_is_issue]=0
fi

#printf "real_hash: ${rigs[${rig}_real_hash]} \n"

#printf "Getting energy stats: "

local tasmota_stats=`timeout $curl_timeout curl -m 1 --silent http://${rigs[${rig}_tasmotaip]}/cm?cmnd=Status%208`
rigs[${rig}_total_energy]=`printf "$tasmota_stats" | jq .StatusSNS.ENERGY.Total`
rigs[${rig}_power]=`printf "$tasmota_stats" | jq .StatusSNS.ENERGY.Power`
rigs[${rig}_voltage]=`printf "$tasmota_stats" | jq .StatusSNS.ENERGY.Voltage`

#printf "${rigs[${rig}_total_energy]} kWh/${rigs[${rig}_power]} W\n"

done
}
